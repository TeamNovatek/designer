<?php namespace {{ namespace }};

/**
 * class AbstractFactory
 *
 * Sometimes also known as "abstract factory" or "Kit" in a GUI libraries.
 *
 * This design pattern implements the Dependency Inversion Principle since
 * it is the concrete subclass which creates concrete components.
 *
 *
 * Therefore 4 concretes classes, 2 for factories and 2 for products, but the client just need to know this contract
 * to build concrete products.
 */

abstract class {{ name }}
{
    /**
     * Creates product A.
     *
     * @return ProductA
     */
    abstract public function createProductA();


    /**
     * Creates product B.
     *
     * @return ProductB
     */
    abstract public function createProductB();

}
